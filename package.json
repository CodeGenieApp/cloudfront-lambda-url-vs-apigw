{
  "name": "recipes",
  "version": "1.0.0",
  "private": true,
  "description": "",
  "main": "handler.ts",
  "type": "module",
  "scripts": {
    "start-ui:dev": "cd packages/ui && npm run start-ui:dev",
    "start-ui:staging": "cd packages/ui && npm run start-ui:staging",
    "start-ui:prod": "cd packages/ui && npm run start-ui:prod",
    "start-ui-local-api:dev": "cd packages/ui && npm run start-ui-local-api:dev",
    "start-ui-local-api:staging": "cd packages/ui && npm run start-ui-local-api:staging",
    "start-ui-local-api:prod": "cd packages/ui && npm run start-ui-local-api:prod",
    "start-api:dev": "cd packages/api && npm run start-api:dev",
    "start-api:staging": "cd packages/api && npm run start-api:staging",
    "start-api:prod": "cd packages/api && npm run start-api:prod",
    "deploy:dev": "cd packages/cdk && npm run deploy:dev -- --all",
    "deploy:dev:watch": "cd packages/cdk && npm run deploy:dev:watch",
    "deploy:dev:ui": "cd packages/cdk && npm run deploy:dev -- Recipes-development-WebApp --exclusively",
    "deploy:dev:api": "cd packages/cdk && npm run deploy:dev -- Recipes-development-Api --exclusively --context skipDeployWebApp=true",
    "deploy:dev:database": "cd packages/cdk && npm run deploy:dev -- Recipes-development-Database --exclusively --context skipDeployWebApp=true",
    "deploy:dev:auth": "cd packages/cdk && npm run deploy:dev -- Recipes-development-Auth --exclusively --context skipDeployWebApp=true",
    "deploy:dev:monitoring": "cd packages/cdk && npm run deploy:dev -- Recipes-development-Monitoring --exclusively --context skipDeployWebApp=true",
    "deploy:staging": "cd packages/cdk && npm run deploy:staging -- --all",
    "deploy:staging:ui": "cd packages/cdk && npm run deploy:staging -- Recipes-staging-WebApp --exclusively",
    "deploy:staging:api": "cd packages/cdk && npm run deploy:staging -- Recipes-staging-Api --exclusively --context skipDeployWebApp=true",
    "deploy:staging:database": "cd packages/cdk && npm run deploy:staging -- Recipes-staging-Database --exclusively --context skipDeployWebApp=true",
    "deploy:staging:auth": "cd packages/cdk && npm run deploy:staging -- Recipes-staging-Auth --exclusively --context skipDeployWebApp=true",
    "deploy:staging:monitoring": "cd packages/cdk && npm run deploy:staging -- Recipes-staging-Monitoring --exclusively --context skipDeployWebApp=true",
    "deploy:prod": "cd packages/cdk && npm run deploy:prod -- --all",
    "deploy:prod:ui": "cd packages/cdk && npm run deploy:prod -- Recipes-production-WebApp --exclusively",
    "deploy:prod:api": "cd packages/cdk && npm run deploy:prod -- Recipes-production-Api --exclusively --context skipDeployWebApp=true",
    "deploy:prod:database": "cd packages/cdk && npm run deploy:prod -- Recipes-production-Database --exclusively --context skipDeployWebApp=true",
    "deploy:prod:auth": "cd packages/cdk && npm run deploy:prod -- Recipes-production-Auth --exclusively --context skipDeployWebApp=true",
    "deploy:prod:monitoring": "cd packages/cdk && npm run deploy:prod -- Recipes-production-Monitoring --exclusively --context skipDeployWebApp=true",
    "destroy:dev": "cd packages/cdk && npm run destroy:dev -- --all",
    "cdk-diff:dev": "cd packages/cdk && npm run diff:dev -- --all",
    "cdk-diff:staging": "cd packages/cdk && npm run diff:staging -- --all",
    "cdk-diff:prod": "cd packages/cdk && npm run diff:prod -- --all",
    "pull-stack-outputs:dev": "cd packages/cdk && npm run pull-stack-outputs:dev",
    "pull-stack-outputs:staging": "cd packages/cdk && npm run pull-stack-outputs:staging",
    "pull-stack-outputs:prod": "cd packages/cdk && npm run pull-stack-outputs:prod",
    "copy-outputs-to-dotenv:dev": "cd packages/cdk && npm run copy-outputs-to-dotenv:dev",
    "copy-outputs-to-dotenv:staging": "cd packages/cdk && npm run copy-outputs-to-dotenv:staging",
    "copy-outputs-to-dotenv:prod": "cd packages/cdk && npm run copy-outputs-to-dotenv:prod",
    "cdk-bootstrap:dev": "cd packages/cdk && npm run cdk-bootstrap:dev",
    "cdk-bootstrap:staging": "cd packages/cdk && npm run cdk-bootstrap:staging",
    "cdk-bootstrap:prod": "cd packages/cdk && npm run cdk-bootstrap:prod",
    "test": "(cd packages/ui && npm test) & (cd packages/api && npm test)",
    "test:cognito": "jest --testPathPattern=cognito",
    "lint:check": "prettier ./packages --check",
    "lint:fix": "prettier ./packages --write",
    "zip-release": "zip -r release.zip ./packages/cdk/cdk.out package.json package-lock.json",
    "copy-aws-profile:dev": "tsx ./packages/scripts/copy-aws-profile.ts development",
    "copy-aws-profile:staging": "tsx ./packages/scripts/copy-aws-profile.ts staging",
    "copy-aws-profile:prod": "tsx ./packages/scripts/copy-aws-profile.ts production",
    "init:dev": "npm i && npm run favicons && npm run copy-aws-profile:dev && npm run cdk-bootstrap:dev && npm run deploy:dev -- --all --context skipDeployWebApp=true && npm run deploy:dev && npm run open-ui:dev",
    "init:staging": "npm i && npm run copy-aws-profile:staging && npm run cdk-bootstrap:staging && npm run deploy:staging -- --all --context skipDeployWebApp=true && npm run deploy:staging && npm run open-ui:staging",
    "init:prod": "npm i && npm run copy-aws-profile:prod && npm run cdk-bootstrap:prod && npm run deploy:prod -- --all --context skipDeployWebApp=true && npm run deploy:prod && npm run open-ui:prod",
    "open-ui:dev": "cd packages/ui && npm run open-ui:dev",
    "open-ui:staging": "cd packages/ui && npm run open-ui:staging",
    "open-ui:prod": "cd packages/ui && npm run open-ui:prod",
    "postinstall": "cd packages/ui && npm i && cd ../api && npm i && cd ../cdk && npm i && cd ../cognito && npm i",
    "set-user-admin:dev": "dotenv -e ./packages/api/.env.development.local -e ./packages/api/.env.development -- tsx ./packages/scripts/set-user-admin.ts",
    "set-user-admin:staging": "dotenv -e ./packages/api/.env.staging.local -e ./packages/api/.env.staging -- tsx ./packages/scripts/set-user-admin.ts",
    "set-user-admin:prod": "dotenv -e ./packages/api/.env.production.local -e ./packages/api/.env.production -- tsx ./packages/scripts/set-user-admin.ts",
    "favicons": "tsx ./packages/scripts/favicons.ts"
  },
  "keywords": [],
  "author": "",
  "husky": {
    "hooks": {
      "pre-push": "cd packages/api && npm test"
    }
  },
  "devDependencies": {
    "@codegenie/cli": "^1.5.0",
    "@eslint/js": "^9.3.0",
    "@next/eslint-plugin-next": "^14.2.3",
    "@semantic-release/changelog": "^6.0.2",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^8.0.7",
    "@semantic-release/npm": "^9.0.2",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "@serverless/event-mocks": "^1.1.1",
    "@tanstack/eslint-plugin-query": "^5.35.6",
    "@testing-library/jest-dom": "^5.16.5",
    "@types/aws-lambda": "^8.10.133",
    "@types/jest": "^29.5.5",
    "@types/node": "^20.11.1",
    "aws-lambda-mock-context": "^3.2.1",
    "dotenv-cli": "^7.4.2",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.2",
    "favicons": "^7.2.0",
    "husky": "^8.0.3",
    "prettier": "^3.2.5",
    "semantic-release": "^20.1.0",
    "styled-jsx": "^5.1.2",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.4.2",
    "tsx": "^4.7.1",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.10.0",
    "webpack": "^5.75.0",
    "webpack-node-externals": "^3.0.0"
  },
  "dependencies": {
    "@aws-sdk/credential-providers": "^3.405.0",
    "axios": "^1.6.7"
  }
}
